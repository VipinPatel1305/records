{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/Details.ts","webpack:///./src/app/Month.ts","webpack:///./src/app/MonthData.ts","webpack:///./src/app/User.ts","webpack:///./src/app/admin/admin.component.css","webpack:///./src/app/admin/admin.component.html","webpack:///./src/app/admin/admin.component.ts","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/authscopte.service.ts","webpack:///./src/app/cheque-details/cheque-details.component.css","webpack:///./src/app/cheque-details/cheque-details.component.html","webpack:///./src/app/cheque-details/cheque-details.component.ts","webpack:///./src/app/cheque-form/cheque-form.component.css","webpack:///./src/app/cheque-form/cheque-form.component.html","webpack:///./src/app/cheque-form/cheque-form.component.ts","webpack:///./src/app/cheque.ts","webpack:///./src/app/expense-details/expense-details.component.css","webpack:///./src/app/expense-details/expense-details.component.html","webpack:///./src/app/expense-details/expense-details.component.ts","webpack:///./src/app/invoice-form/invoice-form.component.css","webpack:///./src/app/invoice-form/invoice-form.component.html","webpack:///./src/app/invoice-form/invoice-form.component.ts","webpack:///./src/app/login/login.component.css","webpack:///./src/app/login/login.component.html","webpack:///./src/app/login/login.component.ts","webpack:///./src/app/main/main.component.css","webpack:///./src/app/main/main.component.html","webpack:///./src/app/main/main.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","export class Details{\n\tid: number;\n\tindex: number;\n\tconstructor(\n\tpublic description: string,\n\tpublic recipt_num: string,\n\tpublic amount: number,\n\tpublic updateamount: number,\n\tpublic trans_date: Date,\n\tpublic formonth: number,\n\tpublic foryear: number)\n\t{\n\t\n\t}\n}\n\n","export class Month{\n\tconstructor(public id: number, public name: string)\n\t{\n\n\t}\n}","import {Month} from './Month';\n\nexport const MONTHS: Month[] = [\n{id: 1, name:\"January\"},\n{id:2, name:\"Febraury\"},\n{id:3, name:\"March\"},\n{id:4, name:\"April\"},\n{id:5, name:\"May\"},\n{id:6, name:\"June\"},\n{id:7, name:\"July\"},\n{id:8, name:\"August\"},\n{id:9, name:\"September\"},\n{id:10, name:\"October\"},\n{id:11, name:\"November\"},\n{id:12, name:\"December\"}\n]\n;\n\nexport const YEARS: number[] = [2018,2019];\n//export const DOMAIN: string = \"/backend\"; //online\nexport const DOMAIN: string = \"/records/backend\";\n","export class User{\n\tname: string;\n\tpass: string;\n}","module.exports = \"\"","module.exports = \"<app-main></app-main>\\n<div class=\\\"container\\\">\\n    <h1>Admin</h1>\\n\\t\\t <table id=\\\"monthyear\\\" name=\\\"yearmonthselection\\\">\\n\\t\\t  <tr>\\n\\t\\t      <th>\\n\\t\\t        <h2>Month</h2>\\n\\t\\t      </th>\\n\\n\\t\\t      <th>\\n\\t\\t        <h2>Year</h2>\\n\\t\\t      </th>\\n\\t\\t  </tr>\\n\\t\\t      <td>\\n\\t\\t        <select id=\\\"monthyear\\\" [(ngModel)]=\\\"selectedmonth\\\">   \\n\\t\\t          <option *ngFor=\\\"let month of months\\\" [ngValue]=\\\"month.id\\\">\\n\\t\\t            <span>{{month.name}}</span>\\n\\t\\t          </option>\\n\\t\\t        </select>\\n\\t\\t      </td>\\n\\t\\t      <td>\\n\\t\\t        <select id=\\\"monthyear\\\" [(ngModel)]=\\\"selectedyear\\\">\\n\\t\\t          <option *ngFor=\\\"let year of years\\\">\\n\\t\\t           {{year}}\\n\\t\\t          </option>\\n\\t\\t        </select>\\n\\t\\t      </td>\\n\\t\\t    <tr>\\n\\t\\t  </tr>\\n\\t\\t</table>\\n      <button type=\\\"submit\\\" class=\\\"btn btn-success\\\" (click)=\\\"closemonth(selectedmonth, selectedyear)\\\" >Close Month</button>\\n\\t  <button type=\\\"submit\\\" class=\\\"btn btn-success\\\" (click)=\\\"initmonth(selectedmonth, selectedyear)\\\" >Intialize Month</button>\\n\\t  <button type=\\\"submit\\\" class=\\\"btn btn-success\\\" (click)=\\\"generatereport(selectedmonth, selectedyear)\\\" >Generate Report</button>\\n</div>\\n<div>\\n\\t<p>Server Reply: {{returnmessage}}</p>\\n</div>\\n\\n\"","import { Component, OnInit } from '@angular/core';\nimport {MONTHS} from '../MonthData';\nimport {Month} from '../Month';\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\nimport {\n  HttpEvent, HttpInterceptor, HttpHandler, HttpRequest\n} from '@angular/common/http';\nimport { HttpHeaders } from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\nimport {AuthscopteService} from '../authscopte.service'\nimport {DOMAIN} from '../MonthData';\n\n@Component({\n  selector: 'app-admin',\n  templateUrl: './admin.component.html',\n  styleUrls: ['./admin.component.css']\n})\nexport class AdminComponent implements OnInit {\n\n  selectedmonth: number = 0;\n  selectedyear: number = 0;\n  months: Month[] = MONTHS;\n  years:number[] = [2018, 2019];\n  returnmessage = \"\";\n  \n  httpOptions = {\n  headers: new HttpHeaders({\n    'Content-Type':  'application/json'\n  })\n};\n\ndomainurl = DOMAIN;\n\n  constructor(private http: HttpClient, private authservice: AuthscopteService) { }\n\n  ngOnInit() {\n        this.authservice.validatelogin('admin');\n  }\n\n  initmonth(selectedmonth: number, selectedyear: number)\n  {\n  \tconsole.log(\"Month:\" + selectedmonth + \" initialized year:\" + selectedyear );\n    this.getinitializemonth(selectedmonth, selectedyear).subscribe(\n      msg => {\n        this.returnmessage = msg;\n        console.log(\"Server message: \" + msg);\n      }\n      );\n  }\n\n  closemonth(selectedmonth: number, selectedyear: number)\n  {\n    console.log(\"Month:\" + selectedmonth + \" closed year:\" + selectedyear);\n    this.getclosemonth(selectedmonth, selectedyear).subscribe(\n      msg => {\n        this.returnmessage = msg;\n        console.log(\"Server message:\" + msg);\n      }\n      )\n  }\n\n  generatereport(selectedmonth: number, selectedyear: number)\n  {\n    console.log(\"Generate Report Month:\" + selectedmonth + \" year:\" + selectedyear);\n    this.gethttpgeneratereport(selectedmonth, selectedyear).subscribe(\n      msg => {\n        this.returnmessage = msg;\n        console.log(\"Server message:\" + msg);\n      }\n      )\n  }\n\n  getinitializemonth(selectedmonth:number, selectedyear):Observable<string>\n  {\n     var geturl = this.domainurl + \"/init_month.php?month=\" + (selectedmonth) + \"&year=\" + selectedyear;\n     return  this.http.get<string>(geturl);\n  }\n\n  getclosemonth(selectedmonth:number, selectedyear):Observable<string>\n  {\n     var geturl = this.domainurl + \"/close_month.php?month=\" + (selectedmonth) + \"&year=\" + selectedyear;\n     return  this.http.get<string>(geturl);\n  }  \n\n  gethttpgeneratereport(selectedmonth:number, selectedyear): Observable<string>{\n    var geturl = this.domainurl + \"/generate_report.php?month=\" + selectedmonth + \"&year=\" + selectedyear;\n    return  this.http.get<string>(geturl);\n  }    \n\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { ExpenseDetailsComponent } from './expense-details/expense-details.component';\nimport { InvoiceFormComponent } from './invoice-form/invoice-form.component';\nimport { ChequeFormComponent } from './cheque-form/cheque-form.component';\nimport { ChequeDetailsComponent } from './cheque-details/cheque-details.component';\nimport { AdminComponent } from './admin/admin.component';\nimport { LoginComponent } from './login/login.component'; \nimport {MainComponent} from './main/main.component';\n\n\nconst routes: Routes = [\n  {path: 'new-cheque', component: ChequeFormComponent},\n  {path: 'new-invoice', component: InvoiceFormComponent},\n  {path: 'report-cheque', component: ChequeDetailsComponent},\n  {path: 'report-invoice', component: ExpenseDetailsComponent},\n  {path: 'admin', component: AdminComponent},\n  {path: 'login', component: LoginComponent},\n  {path: 'main', component: MainComponent},\n  {path: '', component: LoginComponent}\n];\n\n@NgModule({\n\t  imports: [RouterModule.forRoot(routes)],\n  exports: [ RouterModule ]\n})\n\nexport class AppRoutingModule { }\n","module.exports = \"button{\\n\\tfont-size: 15px;\\n\\tcolor: DodgerBlue;\\n\\tfont-family: monospace;\\n\\tfont-weight: bold;\\n}\\n\\nh1{\\n\\tcolor: DodgerBlue;\\n\\tfont-family:  Impact;\\n\\tfont-weight: 900;\\n}\"","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\n<router-outlet></router-outlet>\"","import { Component } from '@angular/core';\nimport {AuthscopteService} from './authscopte.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  scope: string = \"un\";\n  title = 'app';\n  loggedin = \"false\"\n\n  constructor(private authservice: AuthscopteService) {\n   }\n  ngOnInit() {\n   this.authservice.validatepubliclogin();\n  }\n\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport {FormsModule} from '@angular/forms';\nimport { RouterModule, Routes } from '@angular/router';\nimport { AppComponent } from './app.component';\nimport { ExpenseDetailsComponent } from './expense-details/expense-details.component';\nimport { InvoiceFormComponent } from './invoice-form/invoice-form.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { ChequeFormComponent } from './cheque-form/cheque-form.component';\nimport { ChequeDetailsComponent } from './cheque-details/cheque-details.component';\nimport { AdminComponent } from './admin/admin.component';\nimport { MainComponent } from './main/main.component';\nimport { LoginComponent } from './login/login.component';\nimport { AppRoutingModule } from './/app-routing.module'; \nimport { CookieService } from 'ngx-cookie-service';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ExpenseDetailsComponent,\n    InvoiceFormComponent,\n    ChequeFormComponent,\n    ChequeDetailsComponent,\n    AdminComponent,\n    MainComponent,\n    LoginComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    HttpClientModule,\n    AppRoutingModule\n  ],\n  providers: [CookieService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { CookieService } from 'ngx-cookie-service';\nimport { HttpClientModule } from '@angular/common/http';\nimport { JwtHelperService } from '@auth0/angular-jwt';\nimport { Router } from '@angular/router';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthscopteService {\n  scope:string = \"###\";\n  cookieId = \"vip-angular-cookie\";\n  helper:JwtHelperService;\n\n  constructor(private cookieService: CookieService, private router: Router)\n  {\n    this.helper = new JwtHelperService();\n  }\n\n  authroute(routeTo, access_level)\n  {\n    this.updatescope();\n    var res:boolean = false;\n     switch (access_level) {\n       case \"public\":\n         //console.log(\"about to navigate:\" + routeTo + \" access_level: \" + access_level);\n         res = this.validatepubliclogin();\n         break;\n       \n       case \"mcm\":\n         res = this.validatemcmlogin();\n       break;\n\n       case \"admin\":\n         res = this.validateadminlogin();\n       break;\n\n       default:\n          this.router.navigate(['/login']);\n         break;\n     }\n\n     if(res)   \n     { \n       //console.log(\"about to navigate\");\n        this.router.navigate([routeTo]);\n      }\n  }\n\n  validatelogin(access_level)\n  {\n    this.updatescope();\n    //console.log(\"validatelogin, scope: \" + this.scope);\n    var res:boolean = false;\n     switch (access_level) {\n       case \"public\":\n         res = this.validatepubliclogin();\n         break;\n       \n       case \"mcm\":\n         res = this.validatemcmlogin();\n       break;\n\n       case \"admin\":\n         res = this.validateadminlogin();\n       break;\n\n       default:\n          this.router.navigate(['/login']);\n         break;\n     }\n\n     if(res == false)   \n     { \n       //console.log(\"about to navigate\");\n        this.router.navigate(['/login']);\n      }\n  }\n\n  validatepubliclogin()\n  {\n    //console.log(\"public scope:\" + this.scope);\n    if(this.scope == \"public\" || this.scope == \"mcm\"|| this.scope == \"admin\")\n      return true;\n    else \n      return false;\n  }\n\n  validatemcmlogin():boolean\n  {\n    if(this.scope == \"mcm\" || this.scope == \"admin\")\n      return true;\n    else\n      return false;\n  }  \n\n  validateadminlogin():boolean\n  {\n    if( this.scope == \"admin\")\n      return true;\n    else\n      return false;\n  }  \n\n  updatescope()\n  {\n      if(this.scope == \"###\" && this.cookieService.check(this.cookieId))\n      {\n         var cookievalue = this.cookieService.get(this.cookieId);\n         var decodedToken = this.helper.decodeToken(cookievalue);\n         //console.log(\"decoded token:\" + decodedToken);\n         //console.log(\"extracted scope:\" + decodedToken.scope);\n         this.scope = decodedToken.scope;\n     }\n  }\n\n  setCookie(cookievalue)\n  {\n    //this.cookieService.set(this.cookieId, cookievalue);\n    this.updatescope();\n  }\n\n  getCookie():string{\n    return this.cookieService.get(this.cookieId);\n  }\n\n  getScope():string\n  {\n    this.updatescope();\n    return this.scope;\n  }\n\n  logout()\n  {\n    this.scope = \"###\";\n    this.cookieService.delete(this.cookieId);\n    this.router.navigate(['/login']);\n  }\n}\n","module.exports = \"\"","module.exports = \"<h2>Year</h2>\\n<select [(ngModel)]=\\\"selectedyear\\\">\\n  <option *ngFor=\\\"let year of years\\\">\\n    {{year}}\\n  </option>\\n</select>\\n\\n<h3>Month</h3>\\n<select [(ngModel)]=\\\"selectedmonth\\\" (ngModelChange)=\\\"fillcheque(selectedmonth, selectedyear)\\\">   \\n  <option *ngFor=\\\"let month of months\\\" >\\n    {{month}}\\n  </option>\\n</select>\\n\\n\\n<table style=\\\"width:50%\\\">\\n  <tr>\\n    <th>S/No.</th>\\n    <th>Date</th> \\n    <th>Details</th>\\n    <th>Recipt No.</th>\\n    <th>Amount</th>\\n    <th>Settled</th>\\n  </tr>\\n  <tr *ngFor=\\\"let cheque of cheques\\\">\\n    <td>{{cheque.id}}.</td>\\n    <td>{{cheque.date_issue| date}}</td>\\n    <td>{{cheque.purpose}}</td>\\n    <td>{{cheque.cheque_no}}</td>\\n    <td>{{cheque.amount|currency:\\\"₹\\\"}}</td>\\n    <td>{{cheque.settled}}</td>\\n    <td *ngIf=\\\"cheque.settled!='Yes'\\\"><button (click)=\\\"updaterecord(cheque)\\\">Settle</button></td>\\n</table>\\n<table style=\\\"width:25%\\\">\\n  <tr>\\n    <td>Total for the month</td>\\n    <td>5553</td>\\n  </tr>\\n</table>\\n\\n\\n\\n\"","import { Component, OnInit } from '@angular/core';\nimport { Cheque } from '../cheque';\nimport { HttpHeaders } from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError, retry } from 'rxjs/operators';\nimport {\n  HttpEvent, HttpInterceptor, HttpHandler, HttpRequest\n} from '@angular/common/http';\n\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\n\n@Component({\n  selector: 'app-cheque-details',\n  templateUrl: './cheque-details.component.html',\n  styleUrls: ['./cheque-details.component.css']\n})\nexport class ChequeDetailsComponent implements OnInit {\n  httpOptions = {\n  headers: new HttpHeaders({\n    'Content-Type':  'application/json'\n  })\n};\n\n  dateval: Date = new Date();\n  years = [2018, 2019];\n  selectedyear = 4;\n  selectedmonth = 5;\n  months = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12];\n  constructor(private http: HttpClient) { }\n\n  ngOnInit() {\n  }\n\n   cheques: Cheque[];\n\n\n  fillcheque(selectedmonth, selectedyear): void{\n      console.log(\"selected month and year\" + selectedmonth + \" \" + selectedyear)\n        this.getcheque(selectedmonth, selectedyear)\n    // clone the data object, using its known Config shape\n    .subscribe(cheques => this.cheques = cheques);\n  }  \n\n  getcheque(selectedmonth, selectedyear): Observable<Cheque[]>{\n  // now returns an Observable of Config\n  var geturl = \"http://localhost:8888/records/get_cheque.php?month=\" + selectedmonth + \"&year=\" + selectedyear;\n  return this.http.get<Cheque[]>(geturl);\n}\n\n  updaterecord(cheque: Cheque){\n    console.log(\"Update record:\" + cheque.amount + cheque.purpose + cheque.settled);\n  }\n\n}\n","module.exports = \"@import url('https://unpkg.com/bootstrap@3.3.7/dist/css/bootstrap.min.css');\"","module.exports = \"\\n<div class=\\\"container\\\">\\n    <h1>New Cheque</h1>\\n    <form (ngSubmit)=\\\"onSubmit()\\\" #chequeForm=\\\"ngForm\\\">\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"purpose\\\">Purpose</label>\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"newcheque.purpose\\\" id=\\\"purpose\\\" required name=\\\"purpose\\\">\\n      </div>\\n\\n       <div class=\\\"form-group\\\">\\n        <label for=\\\"cheque_no\\\">Cheque No.</label>\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"newcheque.cheque_no\\\" id=\\\"cheque_no\\\" required name=\\\"cheque_no\\\">\\n      </div>\\n\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"amount\\\">Amount</label>\\n        <input type=\\\"number\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"newcheque.amount\\\" id=\\\"amount\\\" required name=\\\"amount\\\"> \\n      </div>\\n\\n       <div class=\\\"form-group\\\">\\n        <label for=\\\"date_issue\\\">Date</label>\\n        <input type=\\\"date\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"newcheque.date_issue\\\" id=\\\"\\n        date_issue\\\" required name=\\\"date_issue\\\"> \\n      </div>\\n\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"settled\\\">Settled</label>\\n        <select [(ngModel)]=\\\"newcheque.settled\\\" class=\\\"form-control\\\"id=\\\"\\n        settled\\\" required name=\\\"settled\\\" >   \\n          <option>Yes</option>\\n          <option>No</option>\\n        </select>\\n      </div>       \\n \\n      <button type=\\\"submit\\\" class=\\\"btn btn-success\\\" [disabled]=\\\"!chequeForm.form.valid\\\" >Submit</button>\\n\\n    </form>\\n</div>\\n\\n\"","import { Component, OnInit } from '@angular/core';\nimport { Cheque } from '../cheque';\nimport { HttpHeaders } from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError, retry } from 'rxjs/operators';\nimport {\n  HttpEvent, HttpInterceptor, HttpHandler, HttpRequest\n} from '@angular/common/http';\n\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\n\n\n@Component({\n  selector: 'app-cheque-form',\n  templateUrl: './cheque-form.component.html',\n  styleUrls: ['./cheque-form.component.css']\n})\nexport class ChequeFormComponent implements OnInit {\ntoday:Date  = new Date();\n\n\n  newcheque = new Cheque(\"momthly\", 211, 345, this.today);\n\n    httpOptions = {\n  headers: new HttpHeaders({\n    'Content-Type':  'application/json'\n  })};\n\n  constructor(private http: HttpClient) { \n  this.today.setHours(0);}\n\n  ngOnInit() {\n  }\nget diagnostic() { return JSON.stringify(this.newcheque); }\n\n\nonSubmit()\n{\n\tconsole.log(this.newcheque);\n\tthis.addinvoice(this.newcheque).subscribe();\n}\n\n\naddinvoice (newcheque: Cheque): Observable<Cheque> {\n\tconsole.log(\"making post request\");\n    return this.http.post<Cheque>(\"http://localhost:8888/records/post_cheque.php\", newcheque, this.httpOptions);\n  }\n\n}\n","export class Cheque{\n\tid: number;\n\tsettled: string;\n\tconstructor(\n\tpublic purpose: string,\n\tpublic cheque_no: number,\n\tpublic amount: number,\n\tpublic date_issue: Date)\n\t{\n\t\n\t}\n}\n\n","module.exports = \"#para1 {\\n    color: DodgerBlue;\\n    width: 50%;\\n}\\n\\n#tab2 {\\n    color: DodgerBlue;\\n}\\n\\ntr{\\n\\ttext-align: left;\\n}\\n\\n#summary{\\n\\tfont-size: 15px;\\n\\tcolor: DodgerBlue;\\n\\tfont-family: monospace;\\n\\tborder:2px solid DodgerBlue;\\n}\\n\\n#updatetable{\\n\\tfont-size: 15px;\\n\\tcolor: DodgerBlue;\\n\\tfont-family: monospace;\\n\\tborder:2px solid DodgerBlue;\\n}\\n\\n#monthyear{\\n\\twidth:10%;\\n\\tfont-size: 25px;\\n\\tcolor: DodgerBlue;\\n}\\n\\n#tableheader{\\n\\tfont-size: 15px;\\n\\tcolor: DodgerBlue;\\n\\tfont-weight: bold;\\n}\\n\\n#customers {\\n    font-family: \\\"Trebuchet MS\\\", Arial, Helvetica, sans-serif;\\n    border-collapse: collapse;\\n    width: 60%;\\n}\\n\\n#customers td, #customers th {\\n    border: 1px solid #ddd;\\n    padding: 8px;\\n}\\n\\n#customers tr:nth-child(even){background-color: #d2e8ff;}\\n\\n#customers tr:hover {background-color: #ddd;}\\n\\n#customers th {\\n    padding-top: 12px;\\n    padding-bottom: 12px;\\n    text-align: left;\\n    background-color: DodgerBlue;\\n    color: white;\\n    }\\n\\n.redcol{\\n \\tcolor: red;\\n \\tfont-weight: bold;\\n }\\n\\n.greencol{\\n \\tcolor: green;\\n \\tfont-weight: bold;\\n }  \"","module.exports = \"<app-main></app-main>\\n<div>\\n <select id=\\\"monthyear\\\" [(ngModel)]=\\\"selectedmonth\\\" (ngModelChange)=\\\"fillinvoice(selectedmonth, selectedyear)\\\">   \\n    <option *ngFor=\\\"let month of months\\\" [ngValue]=\\\"month\\\">\\n      <span>{{month.name}}</span>\\n    </option>\\n  </select>\\n\\n<select id=\\\"monthyear\\\" [(ngModel)]=\\\"selectedyear\\\">\\n  <option *ngFor=\\\"let year of years\\\">\\n   {{year}}\\n  </option>\\n</select>\\n</div>\\n<br> \\n<br> \\n<button *ngIf=\\\"scope!='public'\\\" (click)=\\\"publish()\\\">Publish</button>\\n<a  *ngIf=\\\"disabledownload != true\\\" href={{downloadlink}} download>Download</a>\\n<table *ngIf=\\\"publishmode==true\\\" id=\\\"customers\\\" border=1 name=\\\"detailstable\\\">\\n  <tr id=\\\"tableheader\\\">\\n    <th>S/No.</th>\\n    <th>Date</th> \\n    <th>Details</th>\\n    <th>Recipt No.</th>\\n    <th>Amount</th>\\n  </tr>\\n  <tr  *ngFor=\\\"let detail of details\\\">\\n      <td>{{detail.index}}.</td>\\n\\n      <td>\\n        {{detail.trans_date|date:'d-MMM-yyyy'}}\\n      </td>\\n\\n      <td>\\n        {{detail.description}}\\n      </td>\\n\\n      <td>\\n        {{detail.recipt_num}}\\n      </td>\\n\\n      <td>\\n        {{detail.amount|currency:'INR'}}\\n      </td>                 \\n  </tr>\\n</table>\\n\\n<table *ngIf=\\\"publishmode==false\\\" id=\\\"customers\\\" border=1 name=\\\"detailstable\\\">\\n  <tr id=\\\"tableheader\\\">\\n    <th>S/No.</th>\\n    <th>Date</th> \\n    <th>Details</th>\\n    <th>Recipt No.</th>\\n    <th>Amount</th>\\n    <th>For Month</th>\\n    <th>For Year</th>\\n  </tr>\\n  <tr  *ngFor=\\\"let detail of details\\\">\\n      <td>{{detail.index}}.</td>\\n\\n      <td>\\n        <input type=date [(ngModel)]=\\\"detail.trans_date\\\">\\n      </td>\\n\\n      <td>\\n        <input type=text [(ngModel)]=\\\"detail.description\\\">\\n      </td>\\n\\n      <td>\\n        <input type=text [(ngModel)]=\\\"detail.recipt_num\\\">\\n      </td>\\n\\n      <td>\\n        <input type=number [(ngModel)]=\\\"detail.amount\\\">\\n      </td>   \\n\\n      <td>\\n        <input type=number [(ngModel)]=\\\"detail.formonth\\\">\\n      </td>  \\n\\n      <td>\\n        <input type=number [(ngModel)]=\\\"detail.foryear\\\">\\n      </td>                \\n\\n      <!--<td *ngIf=\\\"detail.amount != 0\\\">{{detail.trans_date| date:'dd-MMM-yyyy'}}</td> -->\\n      <td *ngIf=\\\"publishmode==false\\\"><button (click)=\\\"updatedetail(detail)\\\">Update</button></td>\\n      <td><button (click)=\\\"deletedetail(detail)\\\">Delete</button></td>\\n  </tr>\\n</table>\\n\\n<br>\\n<table border=2 id=\\\"summary\\\">\\n  <tr>\\n    <td id=\\\"tableheader\\\">Total for this Month:</td>\\n    <td>{{total|currency:\\\"₹\\\"}}</td>\\n  </tr>\\n  <tr>\\n    <td id=\\\"tableheader\\\">Month Balance:</td>\\n    <td>{{montlydeposit}} - {{total}} = <span class=\\\"redcol\\\"><span [class.greencol]=\\\"balance > 0\\\">{{balance|currency:\\\"₹\\\"}}</span></span></td>\\n  </tr>   \\n  <tr>\\n    <td id=\\\"tableheader\\\">Cumulative Balance:</td>\\n    <td>{{prevbal}} + {{balance}} = {{cumbal|currency:\\\"₹\\\"}}</td>\\n  </tr>  \\n</table>\\n\\n\\n\\n\"","import { Component, OnInit } from '@angular/core';\nimport { Details } from '../Details';\nimport { HttpHeaders } from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError, retry } from 'rxjs/operators';\nimport {\n  HttpEvent, HttpInterceptor, HttpHandler, HttpRequest\n} from '@angular/common/http';\n\nimport {MONTHS} from '../MonthData';\nimport {Month} from '../Month';\nimport {YEARS} from '../MonthData';\n\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\nimport {AuthscopteService} from '../authscopte.service';\nimport {DOMAIN} from '../MonthData';\n@Component({\n  selector: 'app-expense-details',\n  templateUrl: './expense-details.component.html',\n  styleUrls: ['./expense-details.component.css']\n})\nexport class ExpenseDetailsComponent implements OnInit {\n\n  httpOptions = {\n  headers: new HttpHeaders({\n    'Content-Type':  'application/json'\n  })\n};\n\n  publishmode:boolean = false;\n  months = MONTHS;\n  years = YEARS;\n  total:number = 0;\n  cumbal:number = 0;\n  montlydeposit:number = 280000;\n  balance:number = 0;\n  prevbal:number = 0;\n  newdetail: Details = new Details(\"sd\", \"sd\", 2, 4, new Date(), 21, 2018);\n  dateval: Date = new Date();\n  scope = \"\";\n  selectedyear = 2018;\n  selectedmonth: Month = new Month(1, \"January\");\n  disabledownload = true;\n  downloadlink = \"\";\n\n  constructor(private http: HttpClient, private authservice: AuthscopteService) {\n\n   }\n\n  domainurl = DOMAIN;\n\n  ngOnInit() {\n    this.authservice.validatelogin('public');\n    if(this.authservice.getScope() == \"public\")\n    {\n      this.publishmode = true;\n      this.scope = \"public\";\n    }\n  }\n\n   details: Details[];\n\n\n  fillinvoice(selectedmonth: Month, selectedyear): void{\n      console.log(\"selected month:\" + this.selectedmonth.name + \" and year: \" + selectedyear)\n      this.disabledownload = false;\n        this.getinvoice(selectedmonth.id, selectedyear)\n    // clone the data object, using its known Config shape\n    .subscribe(details => {\n      this.details = details;\n      this.total = 0;\n      var indx = 1;\n      for (let detail of this.details) {\n        this.total += Number(detail.amount);\n        detail.index = indx;\n        indx += 1;\n      }\n\n      this.balance = this.montlydeposit - this.total;\n      this.getcumulativebal(selectedmonth.id, selectedyear).subscribe(\n        prevbal =>{\n          this.prevbal = prevbal;\n          this.cumbal = prevbal + this.balance;\n          console.log(this.prevbal+ \"previous balane\");\n        }\n        );\n\n      this.downloadlink = this.domainurl + \"/download.php?month=\" + selectedmonth.id \n       + \"&year=\" + selectedyear;\n       console.log(\"download link:\" + this.downloadlink);\n    }\n    );\n  }  \n\n  getcumulativebal(monthval:number, selectedyear):Observable<number>\n  {\n     var geturl = this.domainurl +  \"/get_cumbal.php?month=\" + (monthval - 1) + \"&year=\" + selectedyear;\n     return  this.http.get<number>(geturl);\n  }\n\n  getinvoice(monthval, selectedyear): Observable<Details[]>{\n  // now returns an Observable of Config\n  var geturl = this.domainurl + \"/get_invoice.php?month=\" + monthval + \"&year=\" + selectedyear;\n  return  this.http.get<Details[]>(geturl);\n}\n\n  updatedetail(detail: Details)\n  {\n    console.log(\"Update: id\" + detail.id + \" amount: \" + detail.updateamount + detail.description + detail.recipt_num + detail.trans_date);\n    console.log(detail);\n    detail.id = Number(detail.id);\n    // detail.amount = detail.updateamount;\n    this.updatedetailhttp(detail).subscribe();\n  }\n\n  updatedetailhttp(detail: Details): Observable<string>{\n  // now returns an Observable of Config\n  var geturl = this.domainurl + \"/update_invoice.php\";\n  return  this.http.post<string>(geturl, detail, this.httpOptions);\n  }\n\n  deletedetail(detail: Details)\n  {\n    console.log(\"Delete: id\" + detail.id + \" amount: \" + detail.updateamount + detail.description + detail.recipt_num + detail.trans_date);\n    console.log(detail);\n    detail.id = Number(detail.id);\n    this.details = this.details.filter(h => h !== detail);\n    this.deletedetailhttp(detail).subscribe();\n  }\n\n  deletedetailhttp(detail: Details): Observable<string>{\n  // now returns an Observable of Config\n  var geturl = this.domainurl + \"/delete_invoice.php\"\n  return  this.http.post<string>(geturl, detail, this.httpOptions);\n  }\n\n // generatereport(selectedmonth: Month, selectedyear)\n // {\n //   console.log(\"generate report called:\" + selectedmonth.id);\n //   this.gethttpreport(selectedmonth.id, selectedyear).subscribe();\n // }\n\n //  gethttpreport(monthval, selectedyear): Observable<string>{\n //    var geturl = this.domainurl + \"/download.php?month=\" + monthval + \"&year=\" + selectedyear;\n //    return  this.http.get<string>(geturl);\n //  }\n\n\n  publish(){\n      if(this.publishmode == true)\n      {\n        this.publishmode = false;\n      }\n      else{\n        this.publishmode = true;\n      }\n  }\n\n}\n","module.exports = \"h1 {\\n    font: 24px \\\"Trebuchet MS\\\", Arial, Helvetica, sans-serif;\\n    padding: 10px 10px 10px 20px;\\n    display: block;\\n    background: #C0E1FF;\\n    border-bottom: 1px solid #B8DDFF;\\n\\n}\\n\\ninput[type=text], [type=date], [type=number], select, option {\\n    width: 30%;\\n    padding: 12px 20px;\\n    margin: 8px 0;\\n    display: inline-block;\\n    border: 1px solid #ccc;\\n    border-radius: 4px;\\n    box-sizing: border-box;\\n    font-size: 25px;\\n}\\n\\n.button:hover {\\n    background: #3EB1DD;\\n}\\n\\n.button{\\n    padding: 10px 30px 10px 30px;\\n    background: #66C1E4;\\n    border: none;\\n    color: #FFF;\\n    box-shadow: 1px 1px 1px #4C6E91;\\n    -webkit-box-shadow: 1px 1px 1px #4C6E91;\\n    -moz-box-shadow: 1px 1px 1px #4C6E91;\\n    text-shadow: 1px 1px 1px #5079A3; \\n}\\n\\ndiv {\\n    border-radius: 5px;\\n    background-color: #D2E9FF;\\n    padding: 5px;\\n    align-content: center;\\n}\"","module.exports = \"<app-main></app-main>\\n<div class=\\\"container\\\">\\n    <h1>New Invoice</h1>\\n    <form (ngSubmit)=\\\"onSubmit()\\\" #invoiceForm=\\\"ngForm\\\">\\n\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"date\\\">Date</label><br>\\n        <input type=\\\"date\\\" value=\\\"2018-05-04\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"newinvoice.trans_date\\\" id=\\\"\\n        date\\\" required name=\\\"date\\\"> \\n      </div>  \\n\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"formonth\\\">For Month</label><br>\\n          <select id=\\\"monthyear\\\" [(ngModel)]=\\\"newinvoice.formonth\\\" id=\\\"formonth\\\" required name=\\\"formonth\\\">  \\n            <option *ngFor=\\\"let month of months\\\" [ngValue]=\\\"month.id\\\">\\n              <span>{{month.name}}</span>\\n            </option>\\n        </select>\\n      </div>  \\n\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"foryear\\\">For Year</label><br>\\n          <select id=\\\"monthyear\\\" [(ngModel)]=\\\"newinvoice.foryear\\\" id=\\\"formonth\\\" required name=\\\"foryear\\\">  \\n            <option *ngFor=\\\"let year of years\\\" [ngValue]=\\\"year\\\">\\n              <span>{{year}}</span>\\n            </option>\\n        </select>\\n      </div>  \\n\\n       <div class=\\\"form-group\\\">\\n        <label for=\\\"recipt\\\">Recipt</label><br>\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"newinvoice.recipt_num\\\" id=\\\"recipt\\\" required name=\\\"recipt\\\">\\n      </div>\\n\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"detail\\\">Detail</label><br>\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"newinvoice.description\\\" id=\\\"detail\\\" required name=\\\"detail\\\">\\n      </div>\\n\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"amount\\\">Amount</label><br>\\n        <input type=\\\"number\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"newinvoice.amount\\\" id=\\\"amount\\\" required name=\\\"amount\\\"> \\n      </div> \\n \\n      <input class=\\\"button\\\" type=\\\"submit\\\" [disabled]=\\\"!invoiceForm.form.valid\\\" value=\\\"Submit\\\">\\n\\n    </form>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { Details } from '../Details';\nimport { HttpHeaders } from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError, retry } from 'rxjs/operators';\nimport {\n  HttpEvent, HttpInterceptor, HttpHandler, HttpRequest\n} from '@angular/common/http';\n\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\nimport {MONTHS} from '../MonthData';\nimport {Month} from '../Month';\nimport {YEARS} from '../MonthData';\nimport {AuthscopteService} from '../authscopte.service';\nimport {DOMAIN} from '../MonthData';\n\n@Component({\n  selector: 'app-invoice-form',\n  templateUrl: './invoice-form.component.html',\n  styleUrls: ['./invoice-form.component.css']\n})\nexport class InvoiceFormComponent implements OnInit {\n\ntoday:Date  = new Date();\nmonths: Month[] = MONTHS;\nyears = YEARS;\ndomainurl = DOMAIN;\n  newinvoice = new Details(\"  \", \"ADO 211\", 0, 0, this.today, 1, 2018);\n\n  httpOptions = {\n  headers: new HttpHeaders({\n    'Content-Type':  'application/json'\n  })};\n\n  constructor(private http: HttpClient, private authservice: AuthscopteService) { \n    this.today.setHours(0);\n  }\n\n  ngOnInit() {\n    this.authservice.validatelogin('mcm');\n  }\n\nget diagnostic() { return JSON.stringify(this.newinvoice); }\n\n\nonSubmit()\n{\n\tconsole.log(this.newinvoice);\n\tthis.addinvoice(this.newinvoice).subscribe();\n}\n\n\naddinvoice (newinvoice: Details): Observable<Details> {\n\tconsole.log(\"making post request\");\n  return this.http.post<Details>(this.domainurl + \"/post_invoice.php\", newinvoice, this.httpOptions);\n  }\n\n}\n","module.exports = \"h1 {\\n    font: 24px \\\"Trebuchet MS\\\", Arial, Helvetica, sans-serif;\\n    padding: 10px 10px 10px 20px;\\n    display: block;\\n    background: #C0E1FF;\\n    border-bottom: 1px solid #B8DDFF;\\n\\n}\\n\\ninput[type=text], [type=date], [type=password] {\\n    width: 20%;\\n    margin: 8px 0;\\n    display: inline-block;\\n    border: 1px solid #ccc;\\n    border-radius: 4px;\\n    box-sizing: border-box;\\n    font-size: 25px;\\n}\\n\\n.button:hover {\\n    background: #3EB1DD;\\n}\\n\\n.button{\\n    padding: 10px 30px 10px 30px;\\n    background: #66C1E4;\\n    border: none;\\n    color: #FFF;\\n    box-shadow: 1px 1px 1px #4C6E91;\\n    -webkit-box-shadow: 1px 1px 1px #4C6E91;\\n    -moz-box-shadow: 1px 1px 1px #4C6E91;\\n    text-shadow: 1px 1px 1px #5079A3; \\n}\\n\\ndiv {\\n    border-radius: 5px;\\n    background-color: #D2E9FF;\\n    padding: 5px;\\n    align-content: center;\\n}\"","module.exports = \"\\n<div class=\\\"container\\\">\\n    <h1>Login</h1>\\n    <form (ngSubmit)=\\\"onSubmit()\\\" #invoiceForm=\\\"ngForm\\\">\\n\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"user\\\">User</label><br>\\n        <input type=\\\"text\\\" value=\\\"\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"user.name\\\" id=\\\"\\n        name\\\" required name=\\\"name\\\"> \\n      </div>  \\n\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"pass\\\">Password</label><br>\\n        <input type=\\\"password\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"user.pass\\\" id=\\\"pass\\\" required name=\\\"pass\\\">\\n      </div>\\n \\n      <input type=\\\"submit\\\" class=\\\"button\\\" [disabled]=\\\"!invoiceForm.form.valid\\\" value=\\\"Submit\\\">\\n\\n    </form>\\n\\n    <p>{{server_res}}</p>\\n</div>\"","import { Component, OnInit } from '@angular/core';\n\nimport { Observable, throwError, of } from 'rxjs';\nimport { HttpClient, HttpErrorResponse, HttpResponse } from '@angular/common/http';\nimport { HttpHeaders } from '@angular/common/http';\nimport {User} from '../User';\n\n\nimport {AuthscopteService} from '../authscopte.service'\nimport {ServerResponse} from '../ServerResponse';\nimport { catchError, map, tap } from 'rxjs/operators';\nimport { Router } from '@angular/router';\nimport {DOMAIN} from '../MonthData';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n server_res:string = \"\";\n user = new User();\n cookieValue = 'UNKNOWN';\n domainurl = DOMAIN;\n  httpOptions = {\n  headers: new HttpHeaders({\n    'Content-Type':  'application/json'\n  })};\n\n  constructor(private http: HttpClient,\n    private authservice: AuthscopteService, private router: Router){\n    }\n\n  ngOnInit() {\n    this.authservice.authroute('/main', \"public\");\n    }\n\nonSubmit()\n{\n  this.loginhttp(this.user).subscribe(res=> {\n    //console.log(\"res:\" + res.msg + \" \" + res.status);\n    if(res.status == \"successful\")\n    {\n      this.authservice.setCookie(res.msg);\n      this.authservice.authroute('/main', \"public\");\n    }\n    else{\n      this.server_res = \"Authentication failed\";\n    }\n  }, err => {\n    console.error(\"error logged \", err.error.msg);\n    this.server_res = err.error.msg;\n  });\n}\n\n loginhttp(user: User): Observable<ServerResponse> {\n    //console.log(\"making post request with: \" + user.name + \" \" + user.pass);\n    return this.http.post<ServerResponse>(this.domainurl + \"/login.php\", user, this.httpOptions);\n  }  \n}\n","module.exports = \"button{\\n\\tfont-size: 15px;\\n\\tcolor: DodgerBlue;\\n\\tfont-family: monospace;\\n\\tfont-weight: bold;\\n}\\n\\nh1{\\n\\tcolor: DodgerBlue;\\n\\tfont-family:  Impact;\\n\\tfont-weight: 900;\\n}\"","module.exports = \"<nav>\\n    <button *ngIf=\\\"scope!='public'\\\" routerLink=\\\"/new-invoice\\\" routerLinkActive=\\\"active\\\">New Invoice</button>\\n    <button routerLink=\\\"/report-invoice\\\" routerLinkActive=\\\"active\\\">Invoice Report</button>\\n    <button *ngIf=\\\"scope=='admin'\\\" routerLink=\\\"/admin\\\" routerLinkActive=\\\"active\\\">Admin</button>\\n    <button (click)=\\\"logoff()\\\">Logout</button>\\n </nav>\\n \"","import { Component, OnInit } from '@angular/core';\nimport {AuthscopteService} from '../authscopte.service'\nimport {Router} from '@angular/router';\nimport {DOMAIN} from '../MonthData';\nimport {ServerResponse} from '../ServerResponse';\nimport { HttpClient, HttpErrorResponse, HttpResponse } from '@angular/common/http';\nimport { HttpHeaders } from '@angular/common/http';\nimport { Observable, throwError, of } from 'rxjs';\n\n@Component({\n  selector: 'app-main',\n  templateUrl: './main.component.html',\n  styleUrls: ['./main.component.css']\n})\nexport class MainComponent implements OnInit {\n  scope: string = \"\";\n  domainurl = DOMAIN;\n\n  constructor(private http: HttpClient, private authservice: AuthscopteService, private router: Router) {\n    console.log(\"constrcutor main \");\n   }\n\n  ngOnInit() {\n    console.log(\"nginit main \");\n    this.authservice.validatelogin('public');\n    this.scope = this.authservice.getScope();\n  }\n\n  logoff()\n  {\n  \tconsole.log(\"logging off\");\n  \t\n    this.logouthttp().subscribe(res=> {\n      console.log(\"scope:\" + this.authservice.getScope());\n      this.authservice.logout();\n    });\n  }\n\n  logouthttp(): Observable<ServerResponse>{\n  // now returns an Observable of Config\n  var geturl = this.domainurl + \"/logout.php?scope=\" + this.authservice.getScope();\n  return  this.http.get<ServerResponse>(geturl);\n}\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}